version: '3.8'

services:
  mysql:
    image: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123
      - MYSQL_DATABASE=ecomerce-api
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=123
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    restart: always

  redis:
    image: "redis:latest"
    container_name: "redis_ecomerce"
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/data
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092,INSIDE://kafka:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,INSIDE:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INSIDE'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - app-network
    restart: always

  app:
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=admin
      - DATABASE_PASSWORD=123
      - DATABASE_NAME=ecomerce-api
      - REDIS_HOST=redis_ecomerce
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - app-network
    depends_on:
      - mysql
      - redis
      - kafka
    

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  kafka_data:
    driver: local
  redis_data:
    driver: local
